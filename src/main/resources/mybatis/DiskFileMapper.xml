<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.online.disk.dao.DiskFileMapper" >
  <resultMap id="BaseResultMap" type="com.online.disk.model.DiskFile" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_desc" property="fileDesc" jdbcType="VARCHAR" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
    <result column="file_class" property="fileClass" jdbcType="INTEGER" />
    <result column="file_suffix" property="fileSuffix" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, file_name, file_desc, file_path, file_class, file_suffix
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from disk_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from disk_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.online.disk.model.DiskFile" >
    insert into disk_file (id, file_name, file_desc, 
      file_path, file_class, file_suffix
      )
    values (#{id,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{fileDesc,jdbcType=VARCHAR}, 
      #{filePath,jdbcType=VARCHAR}, #{fileClass,jdbcType=INTEGER}, #{fileSuffix,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.online.disk.model.DiskFile" >
    insert into disk_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="fileDesc != null" >
        file_desc,
      </if>
      <if test="filePath != null" >
        file_path,
      </if>
      <if test="fileClass != null" >
        file_class,
      </if>
      <if test="fileSuffix != null" >
        file_suffix,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileDesc != null" >
        #{fileDesc,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileClass != null" >
        #{fileClass,jdbcType=INTEGER},
      </if>
      <if test="fileSuffix != null" >
        #{fileSuffix,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.online.disk.model.DiskFile" >
    update disk_file
    <set >
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileDesc != null" >
        file_desc = #{fileDesc,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileClass != null" >
        file_class = #{fileClass,jdbcType=INTEGER},
      </if>
      <if test="fileSuffix != null" >
        file_suffix = #{fileSuffix,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.online.disk.model.DiskFile" >
    update disk_file
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_desc = #{fileDesc,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_class = #{fileClass,jdbcType=INTEGER},
      file_suffix = #{fileSuffix,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>